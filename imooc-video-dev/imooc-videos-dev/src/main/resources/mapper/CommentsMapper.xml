<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.mapper.CommentsMapper">
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="father_comment_id" />
    <result column="to_user_id" jdbcType="VARCHAR" property="to_user_id" />
    <result column="video_id" jdbcType="VARCHAR" property="video_id" />
    <result column="from_user_id" jdbcType="VARCHAR" property="from_user_id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments (father_comment_id, to_user_id, video_id, 
      from_user_id, create_time, comment
      )
    values (#{father_comment_id,jdbcType=VARCHAR}, #{to_user_id,jdbcType=VARCHAR}, #{video_id,jdbcType=VARCHAR}, 
      #{from_user_id,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        father_comment_id,
      </if>
      <if test="to_user_id != null">
        to_user_id,
      </if>
      <if test="video_id != null">
        video_id,
      </if>
      <if test="from_user_id != null">
        from_user_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="father_comment_id != null">
        father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        to_user_id = #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        video_id = #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        from_user_id = #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="father_comment_id" />
    <result column="to_user_id" jdbcType="VARCHAR" property="to_user_id" />
    <result column="video_id" jdbcType="VARCHAR" property="video_id" />
    <result column="from_user_id" jdbcType="VARCHAR" property="from_user_id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments (father_comment_id, to_user_id, video_id, 
      from_user_id, create_time, comment
      )
    values (#{father_comment_id,jdbcType=VARCHAR}, #{to_user_id,jdbcType=VARCHAR}, #{video_id,jdbcType=VARCHAR}, 
      #{from_user_id,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        father_comment_id,
      </if>
      <if test="to_user_id != null">
        to_user_id,
      </if>
      <if test="video_id != null">
        video_id,
      </if>
      <if test="from_user_id != null">
        from_user_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="father_comment_id != null">
        father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        to_user_id = #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        video_id = #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        from_user_id = #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="father_comment_id" />
    <result column="to_user_id" jdbcType="VARCHAR" property="to_user_id" />
    <result column="video_id" jdbcType="VARCHAR" property="video_id" />
    <result column="from_user_id" jdbcType="VARCHAR" property="from_user_id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments (father_comment_id, to_user_id, video_id, 
      from_user_id, create_time, comment
      )
    values (#{father_comment_id,jdbcType=VARCHAR}, #{to_user_id,jdbcType=VARCHAR}, #{video_id,jdbcType=VARCHAR}, 
      #{from_user_id,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        father_comment_id,
      </if>
      <if test="to_user_id != null">
        to_user_id,
      </if>
      <if test="video_id != null">
        video_id,
      </if>
      <if test="from_user_id != null">
        from_user_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="father_comment_id != null">
        father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        to_user_id = #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        video_id = #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        from_user_id = #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="father_comment_id" />
    <result column="to_user_id" jdbcType="VARCHAR" property="to_user_id" />
    <result column="video_id" jdbcType="VARCHAR" property="video_id" />
    <result column="from_user_id" jdbcType="VARCHAR" property="from_user_id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments (father_comment_id, to_user_id, video_id, 
      from_user_id, create_time, comment
      )
    values (#{father_comment_id,jdbcType=VARCHAR}, #{to_user_id,jdbcType=VARCHAR}, #{video_id,jdbcType=VARCHAR}, 
      #{from_user_id,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        father_comment_id,
      </if>
      <if test="to_user_id != null">
        to_user_id,
      </if>
      <if test="video_id != null">
        video_id,
      </if>
      <if test="from_user_id != null">
        from_user_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="father_comment_id != null">
        father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        to_user_id = #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        video_id = #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        from_user_id = #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="fatherCommentId" />
    <result column="to_user_id" jdbcType="VARCHAR" property="toUserId" />
    <result column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.Comments">
    insert into comments (id, father_comment_id, to_user_id, 
      video_id, from_user_id, create_time, 
      comment)
    values (#{id,jdbcType=VARCHAR}, #{fatherCommentId,jdbcType=VARCHAR}, #{toUserId,jdbcType=VARCHAR}, 
      #{videoId,jdbcType=VARCHAR}, #{fromUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{comment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.pojo.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fatherCommentId != null">
        father_comment_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="videoId != null">
        video_id,
      </if>
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fatherCommentId != null">
        #{fatherCommentId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="videoId != null">
        #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="fatherCommentId != null">
        father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="fatherCommentId" />
    <result column="to_user_id" jdbcType="VARCHAR" property="toUserId" />
    <result column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.Comments">
    insert into comments (id, father_comment_id, to_user_id, 
      video_id, from_user_id, create_time, 
      comment)
    values (#{id,jdbcType=VARCHAR}, #{fatherCommentId,jdbcType=VARCHAR}, #{toUserId,jdbcType=VARCHAR}, 
      #{videoId,jdbcType=VARCHAR}, #{fromUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{comment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.pojo.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fatherCommentId != null">
        father_comment_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="videoId != null">
        video_id,
      </if>
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fatherCommentId != null">
        #{fatherCommentId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="videoId != null">
        #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="fatherCommentId != null">
        father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="fatherCommentId" />
    <result column="to_user_id" jdbcType="VARCHAR" property="toUserId" />
    <result column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.Comments">
    insert into comments (id, father_comment_id, to_user_id, 
      video_id, from_user_id, create_time, 
      comment)
    values (#{id,jdbcType=VARCHAR}, #{fatherCommentId,jdbcType=VARCHAR}, #{toUserId,jdbcType=VARCHAR}, 
      #{videoId,jdbcType=VARCHAR}, #{fromUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{comment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.pojo.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fatherCommentId != null">
        father_comment_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="videoId != null">
        video_id,
      </if>
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fatherCommentId != null">
        #{fatherCommentId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="videoId != null">
        #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="fatherCommentId != null">
        father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{fatherCommentId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="father_comment_id" />
    <result column="to_user_id" jdbcType="VARCHAR" property="to_user_id" />
    <result column="video_id" jdbcType="VARCHAR" property="video_id" />
    <result column="from_user_id" jdbcType="VARCHAR" property="from_user_id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments (father_comment_id, to_user_id, video_id, 
      from_user_id, create_time, comment
      )
    values (#{father_comment_id,jdbcType=VARCHAR}, #{to_user_id,jdbcType=VARCHAR}, #{video_id,jdbcType=VARCHAR}, 
      #{from_user_id,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        father_comment_id,
      </if>
      <if test="to_user_id != null">
        to_user_id,
      </if>
      <if test="video_id != null">
        video_id,
      </if>
      <if test="from_user_id != null">
        from_user_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="father_comment_id != null">
        father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        to_user_id = #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        video_id = #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        from_user_id = #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_comment_id" jdbcType="VARCHAR" property="father_comment_id" />
    <result column="to_user_id" jdbcType="VARCHAR" property="to_user_id" />
    <result column="video_id" jdbcType="VARCHAR" property="video_id" />
    <result column="from_user_id" jdbcType="VARCHAR" property="from_user_id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.pojo.Comments">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_comment_id, to_user_id, video_id, from_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.imooc.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.imooc.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments (father_comment_id, to_user_id, video_id, 
      from_user_id, create_time, comment
      )
    values (#{father_comment_id,jdbcType=VARCHAR}, #{to_user_id,jdbcType=VARCHAR}, #{video_id,jdbcType=VARCHAR}, 
      #{from_user_id,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.imooc.pojo.Comments" useGeneratedKeys="true">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        father_comment_id,
      </if>
      <if test="to_user_id != null">
        to_user_id,
      </if>
      <if test="video_id != null">
        video_id,
      </if>
      <if test="from_user_id != null">
        from_user_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="father_comment_id != null">
        #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.Comments">
    update comments
    <set>
      <if test="father_comment_id != null">
        father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user_id != null">
        to_user_id = #{to_user_id,jdbcType=VARCHAR},
      </if>
      <if test="video_id != null">
        video_id = #{video_id,jdbcType=VARCHAR},
      </if>
      <if test="from_user_id != null">
        from_user_id = #{from_user_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.Comments">
    update comments
    set father_comment_id = #{father_comment_id,jdbcType=VARCHAR},
      to_user_id = #{to_user_id,jdbcType=VARCHAR},
      video_id = #{video_id,jdbcType=VARCHAR},
      from_user_id = #{from_user_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>